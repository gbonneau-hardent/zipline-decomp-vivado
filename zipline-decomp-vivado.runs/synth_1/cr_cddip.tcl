# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
namespace eval ::optrace {
  variable script "C:/Users/guy/xilinx_project/zipline-decomp-vivado/zipline-decomp-vivado.runs/synth_1/cr_cddip.tcl"
  variable category "vivado_synth"
}

# Try to connect to running dispatch if we haven't done so already.
# This code assumes that the Tcl interpreter is not using threads,
# since the ::dispatch::connected variable isn't mutex protected.
if {![info exists ::dispatch::connected]} {
  namespace eval ::dispatch {
    variable connected false
    if {[llength [array get env XILINX_CD_CONNECT_ID]] > 0} {
      set result "true"
      if {[catch {
        if {[lsearch -exact [package names] DispatchTcl] < 0} {
          set result [load librdi_cd_clienttcl[info sharedlibextension]] 
        }
        if {$result eq "false"} {
          puts "WARNING: Could not load dispatch client library"
        }
        set connect_id [ ::dispatch::init_client -mode EXISTING_SERVER ]
        if { $connect_id eq "" } {
          puts "WARNING: Could not initialize dispatch client"
        } else {
          puts "INFO: Dispatch client connection id - $connect_id"
          set connected true
        }
      } catch_res]} {
        puts "WARNING: failed to connect to dispatch server - $catch_res"
      }
    }
  }
}
if {$::dispatch::connected} {
  # Remove the dummy proc if it exists.
  if { [expr {[llength [info procs ::OPTRACE]] > 0}] } {
    rename ::OPTRACE ""
  }
  proc ::OPTRACE { task action {tags {} } } {
    ::vitis_log::op_trace "$task" $action -tags $tags -script $::optrace::script -category $::optrace::category
  }
  # dispatch is generic. We specifically want to attach logging.
  ::vitis_log::connect_client
} else {
  # Add dummy proc if it doesn't exist.
  if { [expr {[llength [info procs ::OPTRACE]] == 0}] } {
    proc ::OPTRACE {{arg1 \"\" } {arg2 \"\"} {arg3 \"\" } {arg4 \"\"} {arg5 \"\" } {arg6 \"\"}} {
        # Do nothing
    }
  }
}

proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
OPTRACE "synth_1" START { ROLLUP_AUTO }
OPTRACE "Creating in-memory project" START { }
create_project -in_memory -part xcvu57p-fsvk2892-2-e

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_param synth.elaboration.rodinMoreOptions {rt::set_parameter dissolveMemorySizeLimit 1563000}
set_property webtalk.parent_dir C:/Users/guy/xilinx_project/zipline-decomp-vivado/zipline-decomp-vivado.cache/wt [current_project]
set_property parent.project_path C:/Users/guy/xilinx_project/zipline-decomp-vivado/zipline-decomp-vivado.xpr [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property ip_output_repo c:/Users/guy/xilinx_project/zipline-decomp-vivado/zipline-decomp-vivado.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
set_property verilog_define ENA_BIMC=1 [current_fileset]
OPTRACE "Creating in-memory project" END { }
OPTRACE "Adding files" START { }
read_verilog {
  C:/git/Project-Zipline/rtl/common/include/messages_v2.vh
  C:/git/Project-Zipline/rtl/common/include/messages.vh
  C:/git/Project-Zipline/rtl/common/axi/axi_reg_slice_defs.vh
  C:/git/Project-Zipline/rtl/mem_wrappers/bimc_master/top/bimc_master.vh
  C:/git/Project-Zipline/rtl/common/include/cr_structs.sv
  C:/git/Project-Zipline/rtl/common/include/cr_global_params.vh
  C:/git/Project-Zipline/rtl/common/include/cr_native_types.svh
  C:/git/Project-Zipline/rtl/common/include/cr_error_codes.svh
  C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_cceip_64_sa.vh
  C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_cceip_64_sa_regs.vh
  C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_cceip_64_sa_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_cceip_64_saPKG.svp
  C:/git/Project-Zipline/rtl/common/include/crPKG.svp
  C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_cceip_64_sa_regfilePKG.svp
  C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa_regs.vh
  C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa.vh
  C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_saPKG.svp
  C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa_regfilePKG.svp
  C:/git/Project-Zipline/rtl/common/include/ccx_std.vh
  C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support.vh
  C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support_regs.vh
  C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_supportPKG.svp
  C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support_regfilePKG.svp
  C:/git/Project-Zipline/rtl/cr_cg/cr_cg.vh
  C:/git/Project-Zipline/rtl/cr_cg/cr_cg_regs.vh
  C:/git/Project-Zipline/rtl/cr_cg/cr_cg_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_cg/cr_cgPKG.svp
  C:/git/Project-Zipline/rtl/cr_cg/cr_cg_regfilePKG.svp
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc_regs.vh
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc.vh
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgcPKG.svp
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc_regfilePKG.svp
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf_regs.vh
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf.vh
  C:/git/Project-Zipline/rtl/cr_isf/cr_isfPKG.svp
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf_regfilePKG.svp
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_regs.vh
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf.vh
  C:/git/Project-Zipline/rtl/cr_osf/cr_osfPKG.svp
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_regfilePKG.svp
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_regs.vh
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach.vh
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attachPKG.svp
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_regfilePKG.svp
  C:/git/Project-Zipline/rtl/cr_su/cr_su_regs.vh
  C:/git/Project-Zipline/rtl/cr_su/cr_su.vh
  C:/git/Project-Zipline/rtl/cr_su/cr_suPKG.svp
  C:/git/Project-Zipline/rtl/cr_su/cr_su_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_su/cr_su_regfilePKG.svp
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp.vh
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_regs.vh
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decompPKG.svp
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_regsPKG.svp
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_regfilePKG.svp
  C:/git/Project-Zipline/rtl/common/include/nx_mem_typePKG.svp
  C:/git/Project-Zipline/rtl/common/include/nx_mem_typePKG_v2.svp
  C:/git/Project-Zipline/rtl/cr_cddip/cr_cddip_regs.vh
}
set_property is_global_include true [get_files C:/git/Project-Zipline/rtl/common/include/messages.vh]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/common/include/cr_structs.sv]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/common/include/cr_native_types.svh]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/common/include/cr_error_codes.svh]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_cceip_64_sa_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_cceip_64_saPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/common/include/crPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_cceip_64_sa_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_saPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_supportPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cg/cr_cg_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cg/cr_cgPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_cg/cr_cg_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgcPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_isf/cr_isfPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_isf/cr_isf_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_isf/cr_isf_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_osf/cr_osfPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_osf/cr_osf_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_osf/cr_osf_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attachPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_su/cr_suPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_su/cr_su_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_su/cr_su_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decompPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_regsPKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_regfilePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/common/include/nx_mem_typePKG.svp]
set_property file_type "Verilog Header" [get_files C:/git/Project-Zipline/rtl/common/include/nx_mem_typePKG_v2.svp]
read_verilog -library xil_defaultlib -sv {
  C:/git/Project-Zipline/rtl/common/CR_TIE_CELL.sv
  C:/git/Project-Zipline/rtl/common/axi/axi_channel_reg_slice.sv
  C:/git/Project-Zipline/rtl/common/axi/axi_channel_split_slice.sv
  C:/git/Project-Zipline/rtl/common/axi/axi_hndshk_split.sv
  C:/git/Project-Zipline/rtl/mem_wrappers/bimc_master/top/bimc_master.sv
  C:/git/Project-Zipline/rtl/common/cr_adler/cr_adler.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_axi4s_mstr.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_axi4s_mstr_su.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_axi4s_slv.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_axi4s_slv2.sv
  C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_cceip_64_sa.sv
  C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa.sv
  C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa_core.sv
  C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa_regfile.sv
  C:/git/Project-Zipline/rtl/cr_cddip_sa/cr_cddip_sa_regs.sv
  C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support.sv
  C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support_core.sv
  C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support_regfile.sv
  C:/git/Project-Zipline/rtl/cr_cddip_support/cr_cddip_support_regs.sv
  C:/git/Project-Zipline/rtl/cr_cg/cr_cg.sv
  C:/git/Project-Zipline/rtl/cr_cg/cr_cg_core.sv
  C:/git/Project-Zipline/rtl/cr_cg/cr_cg_regfile.sv
  C:/git/Project-Zipline/rtl/cr_cg/cr_cg_regs.sv
  C:/git/Project-Zipline/rtl/cr_cg/cr_cg_tlv_mods.sv
  C:/git/Project-Zipline/rtl/common/cr_crc/cr_crc.sv
  C:/git/Project-Zipline/rtl/common/cr_crc16t/cr_crc16t.sv
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc.sv
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc_core.sv
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc_cts.sv
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc_regfile.sv
  C:/git/Project-Zipline/rtl/cr_crcgc/cr_crcgc_regs.sv
  C:/git/Project-Zipline/rtl/common/cr_dual_rank_synchronizer.sv
  C:/git/Project-Zipline/rtl/common/fifo/cr_fifo_wrap1.sv
  C:/git/Project-Zipline/rtl/common/fifo/cr_fifo_wrap3.sv
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf.sv
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf_core.sv
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf_regfile.sv
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf_regs.sv
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf_support.sv
  C:/git/Project-Zipline/rtl/cr_isf/cr_isf_tlv_mods.sv
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf.sv
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_core.sv
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_ctl.sv
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_dbg2fifo_ctl.sv
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_debug_ctl.sv
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_latency.sv
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_regfile.sv
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_regs.sv
  C:/git/Project-Zipline/rtl/cr_osf/cr_osf_support.sv
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach.sv
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_core.sv
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_ibp.sv
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_pac.sv
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_pmc.sv
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_pti.sv
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_regfile.sv
  C:/git/Project-Zipline/rtl/cr_prefix_attach/cr_prefix_attach_regs.sv
  C:/git/Project-Zipline/rtl/common/cr_rst_sync.sv
  C:/git/Project-Zipline/rtl/cr_cceip_64_sa/cr_sa_counter.sv
  C:/git/Project-Zipline/rtl/cr_su/cr_su.sv
  C:/git/Project-Zipline/rtl/cr_su/cr_su_core.sv
  C:/git/Project-Zipline/rtl/cr_su/cr_su_ctl.sv
  C:/git/Project-Zipline/rtl/cr_su/cr_su_regfile.sv
  C:/git/Project-Zipline/rtl/cr_su/cr_su_regs.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_tlvp.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp_apps/cr_tlvp_axi_in_axi_out_top.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp_apps/cr_tlvp_axi_in_top.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp_apps/cr_tlvp_axi_out_top.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_tlvp_dsm.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_tlvp_id.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_tlvp_rsm.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_tlvp_spl.sv
  C:/git/Project-Zipline/rtl/common/cr_tlvp/cr_tlvp_top.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_be.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_be_fifos.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_be_frm_chk.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_be_tlvp.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_core.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_fe.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_fe_bhp.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_fe_bhp_dflate.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_fe_crc.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_fe_data_aligner.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_fe_fhp.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_fe_lfa.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_fe_lfa_fifo.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_fe_tlvp.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_array_inc.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_bct_sat_writer.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_blt.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_hdr_fifo.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_histogram.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_predef_buf.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_slt_writer.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_small_tables.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_svt_writer.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_symtab_dec.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_symtab_dec_retro.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_symtab_dec_retro_huff.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_htf_table_writer.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_hufd.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_lz77.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_lz77_ag.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_lz77_bm.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_lz77_do.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_lz77_ep.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_lz77_hb.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_lz77_if.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_lz77_pl.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_mtf.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_regfile.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_regs.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_sdd.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_sdd_dec_tables.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_sdd_ld.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_sdd_sp.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_sdd_ss.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_sdd_wf.sv
  C:/git/Project-Zipline/rtl/cr_xp10_decomp/cr_xp10_decomp_unpacker.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_credit_manager.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_event_counter_array.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_event_counter_array_wide.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_event_interrupt.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_fifo.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_fifo_1r1w_indirect_access_debug.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_fifo_1r1w_indirect_access_debug_cntrl.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_fifo_ctrl.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_fifo_ctrl_ram_1r1w.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_fifo_ram_1r1w.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_indirect_access_cntrl.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_indirect_access_cntrl_v2.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_indirect_access_cntrl_v3.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_interface_monitor.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_interface_monitor_pipe.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_ram_1r1w.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_ram_1rw.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_ram_1rw_indirect_access.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_ram_2rw.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_rbus_apb.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_rbus_ring.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_reg_indirect_access.sv
  C:/git/Project-Zipline/rtl/common/nx_library/nx_roreg_indirect_access.sv
  C:/git/Project-Zipline/rtl/common/nx_library/sync_fifo.sv
  C:/git/Project-Zipline/rtl/cr_cddip/cr_cddip.sv
}
OPTRACE "Adding files" END { }
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
set_param ips.enableIPCacheLiteLoad 1
close [open __synthesis_is_running__ w]

OPTRACE "synth_design" START { }
synth_design -top cr_cddip -part xcvu57p-fsvk2892-2-e
OPTRACE "synth_design" END { }
if { [get_msg_config -count -severity {CRITICAL WARNING}] > 0 } {
 send_msg_id runtcl-6 info "Synthesis results are not added to the cache due to CRITICAL_WARNING"
}


OPTRACE "write_checkpoint" START { CHECKPOINT }
# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef cr_cddip.dcp
OPTRACE "write_checkpoint" END { }
OPTRACE "synth reports" START { REPORT }
create_report "synth_1_synth_report_utilization_0" "report_utilization -file cr_cddip_utilization_synth.rpt -pb cr_cddip_utilization_synth.pb"
OPTRACE "synth reports" END { }
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
OPTRACE "synth_1" END { }
